---
- name: configre oracle env
  lineinfile:
    path: "{{ oracle_user_home }}/.bash_profile"
    line: "{{ item }}"
  loop:
    - "export ORACLE_BASE={{ oracle_base }}"
    - "export ORACLE_HOME={{ oracle_home_db }}"
    - "export ORACLE_SID={{ oracle_sid }}"


- name: Create stage directory (base)
  file: dest={{ oracle_stage }} mode=775 owner={{ oracle_user }} group={{ oracle_group }} state=directory
  tags:
    - directoriesdb

- name: Create stage directory (version specific)
  file: dest={{ oracle_stage }}/{{ item.version }} mode=775 owner={{ oracle_user }} group={{ oracle_group }} state=directory
  loop: "{{ oracle_sw_image_db }}"
  when: item.version == oracle_version_db
  tags:
    - directoriesdb

- name: Create rsp stage directory
  file: dest={{ oracle_rsp_stage }} mode=775 owner={{ oracle_user }} group={{ oracle_group }} state=directory
  tags:
    - directoriesdb

- name: Create ORACLE_BASE directory
  file: dest={{ oracle_base }} mode=775 owner={{ oracle_user }} group={{ oracle_group }} state=directory
  tags:
    - directoriesdb

# - name: Transfer oracle installfiles to server (www)
#   get_url: url={{ oracle_sw_source_www }}/{{ item[0].filename }} dest={{ oracle_stage }} mode=775
#   with_nested:
#     - "{{oracle_sw_image_db}}"
#     - "{{oracle_databases}}"
#   become: true
#   become_user: "{{ oracle_user }}"
#   when: item[0].version == item[1].oracle_version_db 
#   tags:
#     - oradbsw

# temp
# - name: copy soft
#   copy: src="/mnt/c/software/{{item.filename}}" dest={{ oracle_stage }} #remote_src=yes
#   loop: "{{oracle_sw_image_db}}"
#   when: item.version == oracle_version_db

# - name: Extract files to stage-area
#   unarchive: src={{ oracle_stage }}/{{ item.filename }} dest={{ oracle_stage }}/{{ item.version }} copy=no
#   become: yes
#   become_user: "{{ oracle_user }}"
#   loop: "{{oracle_sw_image_db}}"
#   when: item.version == oracle_version_db
#   tags:
#     - oradbswunpack

- name: Setup response file for install (DB)
  template: src=db-install.rsp.{{ oracle_version_db }}.j2 dest={{ oracle_rsp_stage }}/{{ oracle_db_responsefile }}
  become: yes
  become_user: "{{ oracle_user }}"
  tags:
    - responsefileswdb

- name: Install Oracle Database Server
  shell: "{{ oracle_stage }}/{{ oracle_version_db }}/database/runInstaller -silent -responseFile {{ oracle_rsp_stage }}/{{ oracle_db_responsefile }} -ignoreSysPrereqs -ignorePrereq -waitforcompletion"
  become: yes
  become_user: "{{ oracle_user }}"
  register: oradbinstall
  tags:
    - oradbinstall

- debug: 
    msg: "{{oradbinstall.stdout}}"

- name: Run oraInstroot script after installation
  shell: "{{ oracle_inventory_loc }}/orainstRoot.sh"
  tags:
    - runroot

- name: Run root script after installation
  shell: "{{ oracle_home_db }}/root.sh"
  tags:
    - runroot