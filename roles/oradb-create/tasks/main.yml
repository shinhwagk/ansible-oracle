---

- include: listener.yml
  tags: listener

- name: Check if database is already created
  shell: grep {{ item.oracle_db_name }}:{{ oracle_home_db }} /etc/oratab | wc -l
  with_items: "{{oracle_databases}}"
  when: item.oracle_db_name is defined
  tags:
    - checkifdbexists
  register: checkdbexist

- name: Create responsefile for dbca
  template: src=dbca-create-db.rsp.{{ item.0.oracle_version_db }}.j2 dest={{ oracle_rsp_stage }}/{{ oracle_dbca_rsp }} owner={{ oracle_user }} group={{ oracle_group }} mode=644 backup=no
  #debug: var=msg
  with_together:
      - "{{oracle_databases}}"
      - "{{checkdbexist.results}}"
  when: item.1.stdout != "1"
  tags:
  - dbcaresponse

- name: Create database(s)
  shell: "time {{ oracle_home_db }}/bin/dbca -createDatabase -responseFile {{ oracle_rsp_stage }}/dbca_{{ item.oracle_db_name }}.rsp -silent -redoLogFileSize {{ item.redolog_size_in_mb }} "
  with_items:
      - "{{oracle_databases}}"
  become: yes
  become_user: "{{ oracle_user }}"
  when: item.state == "present"
  tags:
    - oradbcreate
  register: oradbcreate

- debug: var=item
  with_items:
        - "{{ oradbcreate.results|map(attribute='stdout_lines')|list }}"
  tags:
    - oradbcreate
  when: oradbcreate.changed
  ignore_errors: true

- name: Check if database is running
  shell: ps -ef | grep pmon | grep -v grep
  tags:
    - psout
  register: psout
  ignore_errors: true

- debug: var=psout.stdout_lines
  tags:
    - psout
